-module({{apiPrefix}}{{classname}}_router).

-export([get_operations/0]).
-export([prepare_validator/0]).

-type operations() :: #{
    Method :: binary() => {{apiPrefix}}{{classname}}_apidef:operation_id()
}.

-type init_opts()  :: {
    Operations :: operations(),
    LogicHandler :: atom(),
    ValidatorState :: jesse_state:state()
}.

-export_type([init_opts/0]).

get_operations() ->
    #{ {{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}
        '{{operationId}}' => #{
            path => "{{{basePathWithoutHost}}}{{{replacedPathName}}}",
            method => <<"{{httpMethod}}">>,
            handler => '{{classname}}_handler'
        }{{#hasMore}},{{/hasMore}}{{/operation}}{{#hasMore}},{{/hasMore}}{{/operations}}{{/apis}}{{/apiInfo}}
    }.

prepare_validator() ->
    R = 'Elixir.Jason':'decode!'(element(2, file:read_file(get_swagger_path()))),
    jesse_state:new(R, [{default_schema_ver, <<"http://json-schema.org/draft-04/schema#">>}]).


get_swagger_path() ->
    {ok, AppName} = application:get_application(?MODULE),
    filename:join({{apiPrefix}}{{classname}}_utils:priv_dir(AppName), "swagger.json").
